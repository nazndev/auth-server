-- V1__initial_schema.sql
-- Initial schema setup for auth-server

CREATE TABLE permissions (
    id NUMBER(19, 0) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP,
    name VARCHAR2(255) NOT NULL,
    method VARCHAR2(50) NOT NULL,
    endpoint VARCHAR2(255) NOT NULL,
    microservice VARCHAR2(255) NOT NULL
);

CREATE TABLE roles (
    id NUMBER(19, 0) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP,
    name VARCHAR2(255) NOT NULL UNIQUE
);

CREATE TABLE role_permissions (
    role_id NUMBER(19, 0) NOT NULL,
    permission_id NUMBER(19, 0) NOT NULL,
    PRIMARY KEY (role_id, permission_id),
    FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE CASCADE,
    FOREIGN KEY (permission_id) REFERENCES permissions(id) ON DELETE CASCADE
);

-- Create the view to display role and permission names
CREATE VIEW role_permissions_view AS
SELECT
    r.id AS role_id,
    r.name AS role_name,
    p.id AS permission_id,
    p.name AS permission_name
FROM
    role_permissions rp
JOIN
    roles r ON rp.role_id = r.id
JOIN
    permissions p ON rp.permission_id = p.id;

CREATE OR REPLACE VIEW user_role_mapping AS
SELECT
    u.id AS user_id,
    u.username,
    r.id AS role_id,
    r.name AS role_name
FROM
    users u
JOIN
    user_roles ur ON u.id = ur.user_id
JOIN
    roles r ON r.id = ur.role_id;


CREATE TABLE rsa_keys (
    id NUMBER(19, 0) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP,
    private_key CLOB NOT NULL,
    public_key CLOB NOT NULL,
    active NUMBER(1) DEFAULT 0 NOT NULL,
    key_id VARCHAR2(255) NOT NULL UNIQUE
);

CREATE TABLE users (
    id NUMBER(19, 0) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP,
    username VARCHAR2(255) NOT NULL,
    password VARCHAR2(255) NOT NULL,
    enabled NUMBER(1) DEFAULT 1 NOT NULL
);

CREATE TABLE user_roles (
    user_id NUMBER(19, 0) NOT NULL,
    role_id NUMBER(19, 0) NOT NULL,
    PRIMARY KEY (user_id, role_id),
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE CASCADE
);
